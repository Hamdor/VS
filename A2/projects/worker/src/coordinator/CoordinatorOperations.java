package coordinator;


/**
* coordinator/CoordinatorOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from coordinator.idl
* Dienstag, 2. Juni 2015 17:45 Uhr MESZ
*/

public interface CoordinatorOperations 
{

  /**
       * Register a ggT Prozess (Worker) at coordinator side
       * @param whom    Identifier of ggT Prozess (Worker)
       * @param owner   Identifier of the starter
       */
  void register (String whom, String owner);

  /**
       * Register a new Starter at coordinator side
       * @param whom    Identifier of starter
       */
  void register_starter (String whom);

  /**
       * Called from a ggT prozess to inform about current state
       * @param whom      Identifier of ggT Prozess (Worker)
       * @param seqNr     Sequenz Number
       * @param finished  TRUE  when ggT is finished
       *                  FALSE when ggT is not finished
       * @param current   Last calculated ggT, if finished is TRUE this value
       *                  represent the result
       */
  void inform (String whom, int seqNr, boolean finished, int current);

  /**
       * Returns a list of all starters
       * @returns the names of available starts
       *          this is a list over strings
       */
  String[] getStarter ();

  /**
       * Kick off a calculation
       * @param monitor     Name of monitor
       * @param ggTLower    Lower interval for ggT prozess count (Workers)
       * @param ggTUpper    Upper interval for ggT Prozess count (Workers)
       * @param delayLower  Lower interval for delay (is this really needed?)
       * @param delayUpper  Upper interval for delay
       * @param period      Period for system state
       * @param expectedggt Expected ggT
       */
  void calculate (String monitor, int ggTLower, int ggTUpper, int delayLower, int delayUpper, int period, int expectedggT);

  /**
       * Kills a starter, the starter has to terminate all of its child prozesses
       * @param whom Identifier of starter
       */
  void kill (String whom);

  /**
       * This call terminates the coordinator and all of its starters
       */
  void terminate ();
} // interface CoordinatorOperations
